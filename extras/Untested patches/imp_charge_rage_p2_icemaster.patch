Index: WarriorSpells.cpp
===================================================================
--- WarriorSpells.cpp    (revision 1026)
+++ WarriorSpells.cpp    (working copy)
@@ -25,18 +25,26 @@
bool Charge(uint32 i, Spell* pSpell)
{
     uint32 rage_to_gen;
+    Player *p_caster=pSpell->p_caster;
+    //Player * plr = pSpell->p_caster;
     switch(pSpell->m_spellInfo->Id)
     {
     case 100:   // Charge Rank 1
-        rage_to_gen = 90;
-        break;
+        rage_to_gen = 90;
+        if(p_caster->HasSpell(12697)) rage_to_gen += 60;
+        if(p_caster->HasSpell(12285)) rage_to_gen += 30;
+        break;

     case 6178:  // Charge Rank 2
-        rage_to_gen = 120;
-        break;
+        rage_to_gen = 120;
+        if(p_caster->HasSpell(12697)) rage_to_gen += 60;
+        if(p_caster->HasSpell(12285)) rage_to_gen += 30;
+        break;

     default:    // Charge Rank 3 +
-        rage_to_gen = 150;
+        rage_to_gen = 150;
+        if(p_caster->HasSpell(12697)) rage_to_gen += 60;
+        if(p_caster->HasSpell(12285)) rage_to_gen += 30;
         break;
     }

@@ -52,7 +60,7 @@
    
     pSpell->u_caster->SetUInt32Value(UNIT_FIELD_POWER2, val);
   //  script_debuglog("WarriorSpells.cpp :: Charge generate %u rage on "I64FMT, rage_to_gen, pSpell->u_caster->GetGUID());
-    return true;
+     return true;
}

bool Execute(uint32 i, Spell* pSpell)